<persistence xmlns="http://java.sun.com/xml/ns/persistence"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence         http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
	version="2.0">

	<!-- unidade de persistencia com o nome financas -->
	<persistence-unit name="financas">

		<!-- Implementação do JPA, no nosso caso Hibernate -->
		<provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>

		<!-- Aqui são listadas todas as entidades -->
		<class>br.com.caelum.financas.modelo.Conta</class>

		<properties>
			<!-- Propriedades JDBC -->
			<property name="javax.persistence.jdbc.driver"
				value="com.mysql.jdbc.Driver" />

			<property name="javax.persistence.jdbc.url"
				value="jdbc:mysql://localhost/financas" />

			<property name="javax.persistence.jdbc.user" value="username" />
			<property name="javax.persistence.jdbc.password"
				value="password" />

			<!-- Configurações específicas do Hibernate -->

			<!-- Linguagem de comunicação com o banco -->
			<property name="hibernate.dialect"
				value="org.hibernate.dialect.MySQL5InnoDBDialect" />
			<!-- Permite que crie tabela das entidades caso elas não existam. Podemos usar o valor create para ser um banco limpo -->
			<property name="hibernate.hbm2ddl.auto" value="update" />
			<property name="hibernate.show_sql" value="true" />
			<property name="hibernate.format_sql" value="true" />

		</properties>
	</persistence-unit>
</persistence>